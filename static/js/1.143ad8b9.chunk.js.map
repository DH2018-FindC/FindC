{"version":3,"sources":["components/MapObj.js","components/AddButton.js","components/AddDialog.js","containers/Main.js"],"names":["L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","MapObj","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","coords","data","position","_ref","setState","arr","latitude","longitude","react_default","a","createElement","Map","center","zoom","TileLayer","attribution","url","Marker","color","Component","AddButton","style","bottom","right","zIndex","Button_default","variant","backgroundColor","onClick","setAddNewModalState","Add_default","API_KEY","ENDPOINT_LINK","AddDialog","submitToFirebase","services","keys","forEach","service","fetch","concat","address","then","d","json","loc","results","geometry","location","firebase","database","ref","push","name","lat","lng","clearData","checkError","error","reverseLoading","handleChange","variable","event","defineProperty","target","value","handleChecked","temp","getReverseGeoLocation","link","formatted_address","open","F_condoms","F_bcpills","F_iud","D_condoms","D_bcpills","D_iud","servicesList","id","title","nextProps","_this2","Dialog_default","onClose","aria-labelledby","scroll","DialogTitle_default","DialogContent_default","DialogContentText_default","TextField_default","autoFocus","margin","label","fullWidth","onChange","disabled","loading","CircularProgress_default","FormLabel_default","component","FormGroup_default","map","i","FormControlLabel_default","key","control","Checkbox_default","checked","DialogActions_default","Main","addNewModalOpen","className","width","height","overflow","MapObj_MapObj","AddButton_AddButton","AddDialog_AddDialog"],"mappings":"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","file":"static/js/1.143ad8b9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, CircleMarker, Marker, Popup, TileLayer } from 'react-leaflet';\r\nimport './MapObj.css';\r\nimport 'leaflet/dist/leaflet.css';\r\nimport L from 'leaflet';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nexport default class MapObj extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coords: this.props.coords,\r\n            data: this.props.data\r\n        }\r\n\r\n\r\n        this.position = [47.6555, -122.315];\r\n\r\n    }\r\n\r\n    componentWillReceiveProps({ coords, data }) {\r\n        this.setState({ coords, data });\r\n    }\r\n\r\n\r\n    render() {\r\n        let arr = [this.state.coords && this.state.coords.latitude ? this.state.coords.latitude : 0,\r\n        this.state.coords && this.state.coords.longitude ? this.state.coords.longitude : 0];\r\n        return (\r\n            <div>\r\n                <Map center={arr} zoom={16}>\r\n                    <TileLayer\r\n                        attribution=\"<a href=&quot;http://osm.org/copyright&quot;>OpenStreetMap</a> contributors\"\r\n                        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" />\r\n                    {/* <CircleMarker center={arr}>\r\n                        <Popup>A pretty CSS3 popup.<br />Easily customizable.</Popup>\r\n                    </CircleMarker> */}\r\n                    <Marker position={arr} color=\"red\">\r\n                        {/* <Popup>A pretty CSS3 popup.<br />Easily customizable.</Popup> */}\r\n                    </Marker>\r\n                </Map>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n\r\nexport default class AddButton extends Component {\r\n    render() {\r\n        return <div style={{\r\n            position: 'absolute',\r\n            bottom: 20,\r\n            right: 20,\r\n            zIndex: 500\r\n        }}><Button variant=\"fab\" style={{ backgroundColor: \"#421dac\", color: 'white' }} onClick={() => this.props.setAddNewModalState(true)}>\r\n                <AddIcon />\r\n            </Button></div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/database';\r\n\r\nconst API_KEY = 'AIzaSyA-u4mGseXsGu1mLytcpR3skLsn24vwH3Y';\r\nconst ENDPOINT_LINK = 'https://maps.googleapis.com/maps/api/geocode/json?address=';\r\n//https://maps.googleapis.com/maps/api/geocode/json?address=University%20of%20Washington&key=AIzaSyA-u4mGseXsGu1mLytcpR3skLsn24vwH3Y\r\n// https://maps.googleapis.com/maps/api/geocode/json?address=University%20of%20Washington&key=AIzaSyA-u4mGseXsGu1mLytcpR3skLsn24vwH3Y\r\nexport default class AddDialog extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: this.props.open,\r\n            name: '',\r\n            address: '',\r\n            reverseLoading: false,\r\n            services: {\r\n                F_condoms: false,\r\n                F_bcpills: false,\r\n                F_iud: false,\r\n                D_condoms: false,\r\n                D_bcpills: false,\r\n                D_iud: false\r\n            },\r\n            error: ''\r\n        };\r\n\r\n        this.servicesList = [\r\n            { id: 'F_condoms', title: 'Free Condoms' },\r\n            { id: 'F_bcpills', title: 'Free Birth Control Pills' },\r\n            { id: 'F_iud', title: 'Free IUDs' },\r\n            { id: 'D_condoms', title: 'Discounted Condoms' },\r\n            { id: 'D_bcpills', title: 'Discounted Birth Control Pills' },\r\n            { id: 'D_iud', title: 'Discounted IUDs' }\r\n        ]\r\n    }\r\n\r\n    submitToFirebase = () => {\r\n        let services = this.state.services;\r\n        Object.keys(services).forEach(service => {\r\n            services[service] = services[service] ? 1 : 0\r\n        });\r\n\r\n        fetch(`${ENDPOINT_LINK}${this.state.address}&key=${API_KEY}`)\r\n            .then(d => {\r\n                return d.json();\r\n            })\r\n            .then(d => {\r\n                let loc = d.results[0].geometry.location;\r\n                firebase.database().ref('Data').push({\r\n                    name: this.state.name,\r\n                    address: this.state.address,\r\n                    services,\r\n                    lat: loc.lat,\r\n                    lng: loc.lng\r\n                });\r\n                this.clearData();\r\n            });\r\n    }\r\n\r\n    checkError = () => {\r\n        if (this.state.address === \"\") {\r\n            this.setState({ error: \"address\" });\r\n            return false;\r\n        }\r\n        if (this.state.name === \"\") {\r\n            this.setState({ error: \"name\" });\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    clearData = () => {\r\n        this.setState({\r\n            name: '',\r\n            address: '',\r\n            reverseLoading: false,\r\n            services: {}\r\n        })\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            open: nextProps.open,\r\n            coords: nextProps.coords\r\n        })\r\n    }\r\n\r\n    handleChange = (variable) => event => {\r\n        this.setState({\r\n            [variable]: event.target.value\r\n        })\r\n    }\r\n\r\n    handleChecked = (variable) => event => {\r\n        let temp = this.state.services;\r\n        temp[variable] = true;\r\n        this.setState({\r\n            services: temp\r\n        });\r\n    }\r\n\r\n    getReverseGeoLocation = () => {\r\n        this.setState({ reverseLoading: true });\r\n        let link = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${this.state.coords.latitude},${this.state.coords.longitude}&location_type=ROOFTOP&result_type=street_address&key=${API_KEY}`\r\n        fetch(link).then(d => {\r\n            return d.json();\r\n        }).then(d => {\r\n            this.setState({\r\n                address: d.results[0].formatted_address,\r\n                reverseLoading: false\r\n            });\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <Dialog\r\n                open={this.state.open}\r\n                onClose={() => { this.props.setAddNewModalState(false) }}\r\n                aria-labelledby=\"form-dialog-title\"\r\n                scroll=\"paper\"\r\n            >\r\n                <DialogTitle id=\"form-dialog-title\">Add new info</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        Please enter information about a location!\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        error={this.state.error === \"name\"}\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        fullWidth\r\n                        onChange={this.handleChange('name')}\r\n                    />\r\n                    <TextField\r\n                        error={this.state.error === \"address\"}\r\n                        margin=\"dense\"\r\n                        id=\"address\"\r\n                        label=\"Address\"\r\n                        fullWidth\r\n                        onChange={this.handleChange('address')}\r\n                        value={this.state.address}\r\n                    />\r\n\r\n                    <Button onClick={() => {\r\n                        // this.props.setAddNewModalState(false)\r\n                        this.getReverseGeoLocation();\r\n                    }} color=\"primary\" disabled={this.state.loading}>\r\n                        Use current location\r\n                    </Button>{this.state.loading && <CircularProgress />}\r\n                    <FormLabel component=\"legend\">What kinds of services does this place provide?</FormLabel>\r\n                    <FormGroup>\r\n                        {this.servicesList.map((d, i) => {\r\n                            return <FormControlLabel key={'check' + i} control={\r\n                                <Checkbox checked={this.state.services[d.id]} onChange={this.handleChecked(d.id)} value={d.id} />\r\n                            }\r\n                                label={d.title} />\r\n                        })}\r\n                    </FormGroup>\r\n\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={() => {\r\n                        this.clearData();\r\n                        this.props.setAddNewModalState(false);\r\n                    }} color=\"primary\">\r\n                        Cancel\r\n                    </Button>\r\n                    <Button onClick={() => {\r\n                        if (this.checkError()) {\r\n                            this.submitToFirebase();\r\n                            this.props.setAddNewModalState(false);\r\n                        }\r\n                    }} color=\"primary\">\r\n                        Submit\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div >\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport MapObj from '../components/MapObj';\r\nimport './Main.css';\r\nimport AddButton from '../components/AddButton';\r\nimport AddDialog from '../components/AddDialog';\r\n\r\nexport default class Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            coords: this.props.coords,\r\n            data: this.props.data,\r\n            addNewModalOpen: false\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps({ coords, data }) {\r\n        this.setState({ coords, data })\r\n    }\r\n\r\n    setAddNewModalState = (addNewModalOpen) => {\r\n        this.setState({ addNewModalOpen });\r\n    }\r\n\r\n    render() {\r\n        return <div className={`classname`} style={{\r\n            width: '100vw',\r\n            height: '100vh',\r\n            overflow: 'hidden'\r\n        }}>\r\n            <MapObj coords={this.state.coords} style={{ width: '100vw', height: '100vh' }} data={this.state.data} />\r\n            <AddButton setAddNewModalState={this.setAddNewModalState} />\r\n            <AddDialog open={this.state.addNewModalOpen} coords={this.state.coords} setAddNewModalState={this.setAddNewModalState} />\r\n        </div>\r\n    }\r\n}"],"sourceRoot":""}